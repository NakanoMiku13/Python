# -*- coding: utf-8 -*-
"""Primera Red neuronal

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/15T06gCBXKvVBpciY_x1SLE36OkX4Nzpb
"""

import tensorflow as tf
import numpy as np
import matplotlib.pyplot as plt
saver = tf.train.Saver()
sess = tf.Session()
sess_cpu = tf.Session(config=tf.ConfigProto(device_count={'GPU': 0}))
celsius = np.array([-40,-10,0,8,15,22,38],dtype=float)
fahrenheit = np.array([-40,14,32,46,59,72,100],dtype=float)

#capa = tf.keras.layers.Dense(units=1,input_shape=[1])
#modelo = tf.keras.Sequential([capa])

oculta1 = tf.keras.layers.Dense(units=10,input_shape=[1])
oculta2 = tf.keras.layers.Dense(units=10)
salida = tf.keras.layers.Dense(units=1)
modelo = tf.keras.Sequential([oculta1,oculta2,salida])

modelo.compile(
    optimizer=tf.keras.optimizers.Adam(0.1),
    loss='mean_squared_error'
)

print("Comenzando Entrenamiento...")
historial = modelo.fit(celsius,fahrenheit,epochs=800,verbose=False)
print("Listo")
saver.save(sess,'test_model')

plt.xlabel("# Epoca")
plt.ylabel("Magnitud de perdida")
plt.plot(historial.history["loss"])

print("Hagamos una prediccion")
resultado = modelo.predict([300.0])
print("El resultado es: "+str(resultado)+" fahrenheit")

#print("Variables internas del modelo")
#print(salida.get_weights())